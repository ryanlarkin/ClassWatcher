/*
 * Modified to use lists instead of arrays, and rename from Class to ClassValue
 */

/**
 * Waterloo OpenData API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

/**
 * Represents an Academic class, which is a scheduled instance of a Course
 * @param courseId Course identifier number, not unique
 * @param courseOfferNumber Course offer number identifier for this class
 * @param sessionCode Session code for this class
 * @param classSection Number identifying the section of this class
 * @param termCode Waterloo academic term code
 * @param classNumber Class number identifier for this class
 * @param courseComponent Course component code for this class
 * @param associatedClassCode Associated class code for this class
 * @param maxEnrollmentCapacity Indicates the maximum number of students that can enroll in this class
 * @param enrolledStudents Indicates the current number of students enrolled in this class
 * @param enrollConsentCode Code describing whether No, Instructor, or Department consent to enroll is required. Overrides Course level information if different.
 * @param enrollConsentDescription Description of the enroll requirement. Overrides Course level information if different.
 * @param dropConsentCode Code describing whether No, Instructor, or Department consent to drop is required. Overrides Course level information if different.
 * @param dropConsentDescription Description of the drop requirement. Overrides Course level information if different.
 * @param scheduleData Schedule data for this class
 * @param instructorData Instructor data for this class
 */
data class ClassValue (

    /* Course identifier number, not unique */
    val courseId: String? = null,
    /* Course offer number identifier for this class */
    val courseOfferNumber: Int? = null,
    /* Session code for this class */
    val sessionCode: String? = null,
    /* Number identifying the section of this class */
    val classSection: Int? = null,
    /* Waterloo academic term code */
    val termCode: String? = null,
    /* Class number identifier for this class */
    val classNumber: Int? = null,
    /* Course component code for this class */
    val courseComponent: String? = null,
    /* Associated class code for this class */
    val associatedClassCode: Int? = null,
    /* Indicates the maximum number of students that can enroll in this class */
    val maxEnrollmentCapacity: Int? = null,
    /* Indicates the current number of students enrolled in this class */
    val enrolledStudents: Int? = null,
    /* Code describing whether No, Instructor, or Department consent to enroll is required. Overrides Course level information if different. */
    val enrollConsentCode: String? = null,
    /* Description of the enroll requirement. Overrides Course level information if different. */
    val enrollConsentDescription: String? = null,
    /* Code describing whether No, Instructor, or Department consent to drop is required. Overrides Course level information if different. */
    val dropConsentCode: String? = null,
    /* Description of the drop requirement. Overrides Course level information if different. */
    val dropConsentDescription: String? = null,
    /* Schedule data for this class */
    val scheduleData: List<ClassSchedule>? = null,
    /* Instructor data for this class */
    val instructorData: List<ClassInstructor>? = null
) {
}